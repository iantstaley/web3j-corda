buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61'
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:2.1.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.adarshr:gradle-test-logger-plugin:1.7.0'
        classpath 'gradle.plugin.com.github.breadmoirai:github-release:2.2.9'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version '3.25.0'
    id 'io.codearte.nexus-staging' version '0.21.1'
    id "de.marcphilipp.nexus-publish" version '0.4.0'
    id "de.undercouch.download" version '4.0.0'
}

description = 'Web3j integration with the Corda blockchain platform.'

subprojects {
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.unbroken-dome.test-sets'
    apply plugin: 'com.adarshr.test-logger'

    apply from: "$rootProject.projectDir/gradle/versions.gradle"
    apply from: "$rootProject.projectDir/gradle/repositories.gradle"

    apply {
        [
                'bintray',
                'jacoco',
                'java',
                'javadoc',
                'repositories',
                'publish',
                'spotless'
        ].each { buildScript ->
            download {
                src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
                dest "$rootDir/gradle/$buildScript/build.gradle"
                overwrite true
                quiet true
                onlyIfModified true
            }
            from("$rootDir/gradle/$buildScript/build.gradle")
        }
    }

    testSets {
        integrationTest {
            dirName = 'integration-test'
        }
    }

    tasks.withType(Test) {
        useJUnitPlatform()
        systemProperties = [
                'junit.jupiter.extensions.autodetection.enabled': 'true',
                'junit.jupiter.testinstance.lifecycle.default'  : 'per_class'
        ]
    }

    configurations {
        testOutput.extendsFrom(testCompile)
        integrationTestOutput.extendsFrom(integrationTestCompile)
    }

    testlogger {
        showSimpleNames true
        showStandardStreams true
    }

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation 'org.jetbrains.kotlin:kotlin-noarg'
        implementation 'org.jetbrains.kotlin:kotlin-native-utils'

        implementation("org.jetbrains:annotations:${versions.annotations}") { force = true }

        implementation("ch.qos.logback:logback-classic:${versions.logback}") { force = true }
        implementation("org.slf4j:slf4j-api:${versions.slf4j}") { force = true }
        implementation("org.slf4j:slf4j-ext:${versions.slf4j}") { force = true }
        implementation("org.slf4j:jcl-over-slf4j:${versions.slf4j}") { force = true }
        implementation("org.slf4j:jul-to-slf4j:${versions.slf4j}") { force = true }

        configurations.all {
            resolutionStrategy {
                force(group: 'org.ow2.asm', name: 'asm', version: versions.asm)
                force(group: 'org.jetbrains.kotlin', name: 'kotlin-compiler-embeddable', version: versions.kotlin)
                force(group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson)
                force(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson)
                force(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson)
                force(group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: versions.jackson)
                force(group: 'com.fasterxml.jackson.module', name: 'jackson-module-jaxb-annotations', version: versions.jackson)
                force(group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: versions.jackson)
                force(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: versions.jackson)
                force(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson)
                force(group: 'com.google.errorprone', name: 'error_prone_annotations', version: versions.errorProneAnnotations)
                force(group: 'com.google.guava', name: 'guava', version: versions.guava)
                force(group: 'commons-io', name: 'commons-io', version: versions.commonsIo)
                force(group: 'commons-codec', name: 'commons-codec', version: versions.commonsCodec)
                force(group: 'io.github.classgraph', name: 'classgraph', version: versions.classgraph)
                force(group: 'io.swagger', name: 'swagger-core', version: versions.swagger)
                force(group: 'io.swagger', name: 'swagger-models', version: versions.swagger)
                force(group: 'io.swagger.core.v3', name: 'swagger-annotations', version: versions.swagger3)
                force(group: 'io.swagger.core.v3', name: 'swagger-core', version: versions.swagger3)
                force(group: 'io.swagger.core.v3', name: 'swagger-models', version: versions.swagger3)
                force(group: 'net.bytebuddy', name: 'byte-buddy', version: versions.byteBuddy)
                force(group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: versions.jersey)
                force(group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: versions.jersey)
                force(group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: versions.jersey)
                force(group: 'org.glassfish.jersey.core', name: 'jersey-client', version: versions.jersey)
                force(group: 'org.glassfish.jersey.ext', name: 'jersey-proxy-client', version: versions.jersey)
                force(group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: versions.jersey)
                force(group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: versions.jersey)
            }
        }

        api "io.github.microutils:kotlin-logging:${versions.kLogging}"

        implementation("com.pinterest.ktlint:ktlint-core:${versions.ktlint}") {
            exclude group: 'org.apache.commons'
            exclude group: 'org.apache.httpcomponents'
            exclude group: 'org.slf4j'
        }
        implementation "com.pinterest.ktlint:ktlint-ruleset-standard:${versions.ktlint}"
        implementation "com.pinterest.ktlint:ktlint-ruleset-experimental:${versions.ktlint}"

        testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit5}"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${versions.junit5}"
        testImplementation "com.willowtreeapps.assertk:assertk-jvm:${versions.assertk}"
        testImplementation "junit:junit:${versions.junit4}"
        testImplementation("io.mockk:mockk:${versions.mockk}") {
            exclude group: 'org.jetbrains.kotlin'
        }

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit5}"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${versions.junit5}"

        integrationTestImplementation "org.testcontainers:testcontainers:${versions.testcontainers}"
        integrationTestImplementation "org.testcontainers:junit-jupiter:${versions.testcontainers}"
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    compileKotlin.kotlinOptions.jvmTarget = sourceCompatibility
    compileTestKotlin.kotlinOptions.jvmTarget = sourceCompatibility
    compileIntegrationTestKotlin.kotlinOptions.jvmTarget = sourceCompatibility

    publishing {
        publications {
            maven(MavenPublication) {
                pom {
                    developers {
                        developer {
                            id = 'Puneetha17'
                            name = 'Puneetha Karamsetty'
                            email = 'puneetha@web3labs.com'
                            organization = 'Web3 Labs'
                        }
                        developer {
                            id = 'xaviarias'
                            name = 'Xavier Arias'
                            email = 'xavier@web3labs.com'
                            organization = 'Web3 Labs'
                        }
                    }
                }
            }
        }
    }
}

bintrayUpload {
    enabled = false
}
