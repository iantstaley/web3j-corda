import org.gradle.internal.os.OperatingSystem

buildscript {
    ext {
        web3j_corda_version = '{{web3jCordaVersion}}'
        corda_release_group = 'net.corda'
        corda_release_version = '4.1'
        corda_gradle_plugins_version = '4.0.45'
        kotlin_version = '1.3.50'
        junit_version = '4.12'
        quasar_version = '0.7.10'
        spring_boot_version = '2.0.2.RELEASE'
        spring_boot_gradle_plugin_version = '2.0.2.RELEASE'
        logback_version = '1.2.3'
        corda_platform_version = '4'.toInteger()
        jersey_version = '2.29'
        jackson_version = '2.9.5'
        errorProneAnnotations_versions = '2.2.0'
        guava_versions = '28.1-jre'
        swagger3_versions = '2.0.9'
        swagger_versions = '1.5.23'
        jupiter_version = '5.4.2'
        testcontainers_version = '1.12.3'
        jmustache_version = '1.14'
        gradle_tooling_version = '5.6.4'
        commons_codec_versions = '1.10'
        netty_versions = '4.1.34.Final'
        slf4j_version = '1.7.28'
        yaml_version = '1.23'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://software.r3.com/artifactory/corda' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_gradle_plugin_version"
    }
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://software.r3.com/artifactory/corda' }
        maven { url 'https://repo.gradle.org/gradle/libs-releases' }
        maven {
            url 'https://oss.sonatype.org/service/local/repositories/snapshots/content/'
            mavenContent {
                snapshotsOnly()
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
        }
    }

    jar {
        // This makes the JAR's SHA-256 hash repeatable.
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }
}

subprojects {
    sourceCompatibility = JavaVersion.VERSION_1_8
    compileKotlin.kotlinOptions.jvmTarget = sourceCompatibility
    compileTestKotlin.kotlinOptions.jvmTarget = sourceCompatibility

    dependencies {
        // Kotlin dependencies
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    }
}

apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

dependencies {
    // Corda dependencies
    cordaCompile ("$corda_release_group:corda-core:$corda_release_version") {
        exclude group: 'com.google.errorprone'
        exclude group: 'com.fasterxml.jackson.dataformat'
        exclude group: 'com.fasterxml.jackson.module'
        exclude group: 'org.glassfish.jersey.core'
        exclude group: 'org.slf4j'
        exclude group: 'org.yaml'
    }

    cordaCompile ("$corda_release_group:corda-node-api:$corda_release_version") {
        exclude group: 'com.google.errorprone'
        exclude group: 'com.fasterxml.jackson.dataformat'
        exclude group: 'com.fasterxml.jackson.module'
        exclude group: 'org.glassfish.jersey.core'
        exclude group: 'org.slf4j'
        exclude group: 'org.yaml'
    }

    cordaRuntime ("$corda_release_group:corda:$corda_release_version") {
        exclude group: 'com.google.errorprone'
        exclude group: 'com.fasterxml.jackson.dataformat'
        exclude group: 'com.fasterxml.jackson.module'
        exclude group: 'org.glassfish.jersey.core'
        exclude group: 'org.slf4j'
        exclude group: 'org.yaml'
    }


    // CorDapp dependencies
    cordapp project(":workflows")
    cordapp project(":contracts")

    // Logging dependencies
    cordaCompile "org.slf4j:jul-to-slf4j:$slf4j_version"

    // web3j-corda command-line tools dependency
    implementation(group: 'org.web3j.corda', name: 'web3j-corda-console', version: web3j_corda_version) {
        exclude group: 'com.fasterxml.jackson.core'
    }

    configurations.all {
        resolutionStrategy {
            force(group: 'org.jetbrains.kotlin', name: 'kotlin-compiler-embeddable', version: kotlin_version)
            force(group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jackson_version)
            force(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jackson_version)
            force(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version)
            force(group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jackson_version)
            force(group: 'com.fasterxml.jackson.module', name: 'jackson-module-jaxb-annotations', version: jackson_version)
            force(group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: jackson_version)
            force(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jackson_version)
            force(group: 'com.google.errorprone', name: 'error_prone_annotations', version: errorProneAnnotations_versions)
            force(group: 'com.google.guava', name: 'guava', version: guava_versions)
            force(group: 'commons-codec', name: 'commons-codec', version: commons_codec_versions)
            force(group: 'io.netty', name: 'netty-buffer', version: netty_versions)
            force(group: 'io.netty', name: 'netty-codec', version: netty_versions)
            force(group: 'io.netty', name: 'netty-codec-http', version: netty_versions)
            force(group: 'io.netty', name: 'netty-common', version: netty_versions)
            force(group: 'io.netty', name: 'netty-handler', version: netty_versions)
            force(group: 'io.netty', name: 'netty-resolver', version: netty_versions)
            force(group: 'io.netty', name: 'netty-transport', version: netty_versions)
            force(group: 'io.swagger', name: 'swagger-annotations', version: swagger_versions)
            force(group: 'io.swagger', name: 'swagger-core', version: swagger_versions)
            force(group: 'io.swagger', name: 'swagger-models', version: swagger_versions)
            force(group: 'io.swagger.core.v3', name: 'swagger-annotations', version: swagger3_versions)
            force(group: 'io.swagger.core.v3', name: 'swagger-core', version: swagger3_versions)
            force(group: 'io.swagger.core.v3', name: 'swagger-models', version: swagger3_versions)
            force(group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: jersey_version)
            force(group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: jersey_version)
            force(group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: jersey_version)
            force(group: 'org.glassfish.jersey.core', name: 'jersey-client', version: jersey_version)
            force(group: 'org.glassfish.jersey.ext', name: 'jersey-proxy-client', version: jersey_version)
            force(group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: jersey_version)
            force(group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: jersey_version)
            force(group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4j_version)
            force(group: 'org.slf4j', name: 'jul-to-slf4j', version: slf4j_version)
            force(group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version)
            force(group: 'org.slf4j', name: 'slf4j-ext', version: slf4j_version)
            force(group: 'org.yaml', name: 'snakeyaml', version: yaml_version)
        }
    }
}

cordapp {
    info {
        name '{{corDappName}}'
        vendor 'Web3 Labs'
        targetPlatformVersion corda_platform_version
        minimumPlatformVersion corda_platform_version
    }
}

task installQuasar(type: Copy) {
    destinationDir rootProject.file("lib")
    from(configurations.quasar) {
        rename 'quasar-core(.*).jar', 'quasar.jar'
    }
}

task generateCorDappWrappers(group: 'web3j') {
    dependsOn 'generateCorDappWrappersUnix', 'generateCorDappWrappersWindows'
}

task generateCorDappWrappersUnix(type: Exec, group: 'web3j') {
    onlyIf { OperatingSystem.current().isMacOsX() || OperatingSystem.current().isLinux() }
    commandLine 'web3j-corda', 'generate',
    '--package-name', project.group,
    '--cordapps-dir', projectDir,
    '--output-dir', 'clients'
}

task generateCorDappWrappersWindows(type: Exec, group: 'web3j') {
    onlyIf { OperatingSystem.current().isWindows() }
    commandLine 'web3j-corda.bat', 'generate',
    '--package-name', project.group,
    '--cordapps-dir', projectDir,
    '--output-dir', 'clients'
}
